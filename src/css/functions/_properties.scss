@use 'sass:list';

@function create-css-variables-chain($elementOrState) {
    @if $elementOrState {
        $result: '';
        @each $elementOrStateItem in $elementOrState {
            $result: '#{$result}--#{$elementOrStateItem}';
        }

        @return $result;
    }

    @return '';
}

@function _border-property-side(
    $component,
    $side,
    $property,
    $elementOrState: null,
    $fallback: false
) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);
    $fallbackSuffix: '';
    @if $fallback {
        $fallbackSuffix: ', var(#{$componentChain}--border-#{$side}-#{$property})';
    }

    @return var(
        #{$componentChain}#{$elementOrStateChain}--border-#{$side}-#{$property}#{$fallbackSuffix}
    );
}

@function _border-property($component, $property, $elementOrState: null, $fallback: false) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);

    @return var(
        #{$componentChain}#{$elementOrStateChain}--border-#{$property},
        _border-property-side($component, 'top', $property, $elementOrState, $fallback)
            _border-property-side($component, 'right', $property, $elementOrState, $fallback)
            _border-property-side($component, 'bottom', $property, $elementOrState, $fallback)
            _border-property-side($component, 'left', $property, $elementOrState, $fallback)
    );
}

@function _border-radius-part($component, $part, $elementOrState: null, $fallback: false) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);
    $fallbackSuffix: '';
    @if $fallback {
        $fallbackSuffix: ', var(#{$componentChain}--border-#{$part}-radius)';
    }

    @return var(
        #{$componentChain}#{$elementOrStateChain}--border-#{$part}-radius#{$fallbackSuffix}
    );
}

@function _color-property-part(
    $component,
    $property,
    $part,
    $elementOrState: null,
    $fallback: false
) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);
    $fallbackSuffix: '';
    @if $fallback {
        $fallbackSuffix: ', var(#{$componentChain}--#{$property}--#{$part})';
    }

    @return var(
        #{$componentChain}#{$elementOrStateChain}--#{$property}--#{$part}#{$fallbackSuffix}
    );
}

@function _color-property($component, $property, $elementOrState: null, $fallback: false) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);

    @return var(
        #{$componentChain}#{$elementOrStateChain}--#{$property},
        hsla(
            _color-property-part($component, $property, 'h', $elementOrState, $fallback)
                _color-property-part($component, $property, 's', $elementOrState, $fallback)
                _color-property-part($component, $property, 'l', $elementOrState, $fallback) /
                _color-property-part($component, $property, 'a', $elementOrState, $fallback)
        )
    );
}

@function _spacing-property-side(
    $component,
    $property,
    $side,
    $elementOrState: null,
    $fallback: false
) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);
    $fallbackSuffix: '';
    @if $fallback {
        $fallbackSuffix: ', var(#{$componentChain}--#{$property}-#{$side})';
    }

    @return var(#{$componentChain}#{$elementOrStateChain}--#{$property}-#{$side}#{$fallbackSuffix});
}

@function _spacing-property($component, $property, $elementOrState: null, $fallback: false) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);

    @return var(
        #{$componentChain}#{$elementOrStateChain}--#{$property},
        _spacing-property-side($component, $property, 'top', $elementOrState, $fallback)
            _spacing-property-side($component, $property, 'right', $elementOrState, $fallback)
            _spacing-property-side($component, $property, 'bottom', $elementOrState, $fallback)
            _spacing-property-side($component, $property, 'left', $elementOrState, $fallback)
    );
}

@function _generic-property($component, $property, $elementOrState: null, $fallback: false) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);
    $fallbackSuffix: '';
    @if $fallback {
        $fallbackSuffix: ', var(#{$componentChain}--#{$property})';
    }

    @return var(#{$componentChain}#{$elementOrStateChain}--#{$property}#{$fallbackSuffix});
}

@function animation-property($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'animation', $elementOrState, $fallback);
}

@function animation-duration($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'animation-duration', $elementOrState, $fallback);
}

@function animation-timing-function($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'animation-timing-function', $elementOrState, $fallback);
}

@function border-width($component, $elementOrState: null, $fallback: false) {
    @return _border-property($component, 'width', $elementOrState, $fallback);
}

@function border-top-width($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'top', 'width', $elementOrState, $fallback);
}

@function border-right-width($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'right', 'width', $elementOrState, $fallback);
}

@function border-bottom-width($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'bottom', 'width', $elementOrState, $fallback);
}

@function border-left-width($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'left', 'width', $elementOrState, $fallback);
}

@function border-style($component, $elementOrState: null, $fallback: false) {
    @return _border-property($component, 'style', $elementOrState, $fallback);
}

@function border-top-style($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'top', 'style', $elementOrState, $fallback);
}

@function border-right-style($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'right', 'style', $elementOrState, $fallback);
}

@function border-bottom-style($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'bottom', 'style', $elementOrState, $fallback);
}

@function border-left-style($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'left', 'style', $elementOrState, $fallback);
}

@function border-color($component, $elementOrState: null, $fallback: false) {
    @return _border-property($component, 'color', $elementOrState, $fallback);
}

@function border-top-color($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'top', 'color', $elementOrState, $fallback);
}

@function border-right-color($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'right', 'color', $elementOrState, $fallback);
}

@function border-bottom-color($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'bottom', 'color', $elementOrState, $fallback);
}

@function border-left-color($component, $elementOrState: null, $fallback: false) {
    @return _border-property-side($component, 'left', 'color', $elementOrState, $fallback);
}

@function border-radius($component, $elementOrState: null, $fallback: false) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);

    @return var(
        #{$componentChain}#{$elementOrStateChain}--border-radius,
        _border-radius-part($component, 'top-left', $elementOrState, $fallback)
            _border-radius-part($component, 'top-right', $elementOrState, $fallback)
            _border-radius-part($component, 'bottom-right', $elementOrState, $fallback)
            _border-radius-part($component, 'bottom-left', $elementOrState, $fallback)
    );
}

@function border-top-left-radius($component, $elementOrState: null, $fallback: false) {
    @return _border-radius-part($component, 'top-left', $elementOrState, $fallback);
}

@function border-top-right-radius($component, $elementOrState: null, $fallback: false) {
    @return _border-radius-part($component, 'top-right', $elementOrState, $fallback);
}

@function border-bottom-right-radius($component, $elementOrState: null, $fallback: false) {
    @return _border-radius-part($component, 'bottom-right', $elementOrState, $fallback);
}

@function border-bottom-left-radius($component, $elementOrState: null, $fallback: false) {
    @return _border-radius-part($component, 'bottom-left', $elementOrState, $fallback);
}

@function _box-shadow-part($component, $part, $elementOrState: null, $fallback: false) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);
    $fallbackSuffix: '';
    @if $fallback {
        $fallbackSuffix: ', var(#{$componentChain}--box-shadow-#{$part})';
    }

    @return var(#{$componentChain}#{$elementOrStateChain}--box-shadow-#{$part}#{$fallbackSuffix});
}

@function box-shadow($component, $elementOrState: null, $fallback: false) {
    $componentChain: create-css-variables-chain($component);
    $elementOrStateChain: create-css-variables-chain($elementOrState);

    @return var(
        #{$componentChain}#{$elementOrStateChain}--box-shadow,
        _box-shadow-part($component, 'x', $elementOrState, $fallback)
            _box-shadow-part($component, 'y', $elementOrState, $fallback)
            _box-shadow-part($component, 'blur', $elementOrState, $fallback)
            _box-shadow-part($component, 'spread', $elementOrState, $fallback)
            _box-shadow-part($component, 'color', $elementOrState, $fallback)
    );
}

@function background($component, $elementOrState: null, $fallback: false) {
    @return _color-property($component, 'background', $elementOrState, $fallback);
}

@function color($component, $elementOrState: null, $fallback: false) {
    @return _color-property($component, 'color', $elementOrState, $fallback);
}

@function font-family($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'font-family', $elementOrState, $fallback);
}

@function font-size($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'font-size', $elementOrState, $fallback);
}

@function font-weight($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'font-weight', $elementOrState, $fallback);
}

@function line-height($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'line-height', $elementOrState, $fallback);
}

@function margin($component, $elementOrState: null, $fallback: false) {
    @return _spacing-property($component, 'margin', $elementOrState, $fallback);
}

@function margin-top($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'margin-top', $elementOrState, $fallback);
}

@function margin-right($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'margin-right', $elementOrState, $fallback);
}

@function margin-bottom($component, $elementOrState: null) {
    @return _generic-property($component, 'margin-bottom', $elementOrState);
}

@function margin-left($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'margin-left', $elementOrState, $fallback);
}

@function opacity($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'opacity', $elementOrState, $fallback);
}

@function padding($component, $elementOrState: null, $fallback: false) {
    @return _spacing-property($component, 'padding', $elementOrState, $fallback);
}

@function padding-top($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'padding-top', $elementOrState, $fallback);
}

@function padding-right($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'padding-right', $elementOrState, $fallback);
}

@function padding-bottom($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'padding-bottom', $elementOrState, $fallback);
}

@function padding-left($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'padding-left', $elementOrState, $fallback);
}

@function spacing($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'spacing', $elementOrState, $fallback);
}

@function width($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'width', $elementOrState, $fallback);
}

@function min-width($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'min-width', $elementOrState, $fallback);
}

@function max-width($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'max-width', $elementOrState, $fallback);
}

@function height($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'height', $elementOrState, $fallback);
}

@function min-height($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'min-height', $elementOrState, $fallback);
}

@function max-height($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'max-height', $elementOrState, $fallback);
}

@function size($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'size', $elementOrState, $fallback);
}

@function transition-property($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'transition-property', $elementOrState, $fallback);
}

@function transition-duration($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'transition-duration', $elementOrState, $fallback);
}

@function transition-timing-function($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'transition-timing-function', $elementOrState, $fallback);
}

@function text-align($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'text-align', $elementOrState, $fallback);
}

@function z-index($component, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, 'z-index', $elementOrState, $fallback);
}

@function generic($component, $property, $elementOrState: null, $fallback: false) {
    @return _generic-property($component, $property, $elementOrState, $fallback);
}
