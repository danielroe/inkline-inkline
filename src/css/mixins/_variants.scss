@use '../functions/properties';

@mixin _generic-property($component, $variant, $property, $elementOrState: null) {
    $elementOrStateChain: properties.create-css-variables-chain($elementOrState);
    $variantChain: properties.create-css-variables-chain($variant);

    --#{$component}#{$elementOrStateChain}--#{$property}: var(
        --#{$component}#{$variantChain}#{$elementOrStateChain}--#{$property}
    );
}

@mixin _border-property-side($component, $variant, $side, $property, $elementOrState: null) {
    $elementOrStateChain: properties.create-css-variables-chain($elementOrState);
    $variantChain: properties.create-css-variables-chain($variant);

    --#{$component}#{$elementOrStateChain}--border-#{$side}-#{$property}: var(
        --#{$component}#{$variantChain}#{$elementOrStateChain}--border-#{$side}-#{$property}
    );
}

@mixin _border-property($component, $variant, $property, $elementOrState: null) {
    @include _border-property-side($component, $variant, 'top', $property, $elementOrState);
    @include _border-property-side($component, $variant, 'right', $property, $elementOrState);
    @include _border-property-side($component, $variant, 'bottom', $property, $elementOrState);
    @include _border-property-side($component, $variant, 'left', $property, $elementOrState);
}

@mixin _color-property-part($component, $variant, $property, $part, $elementOrState: null) {
    $elementOrStateChain: properties.create-css-variables-chain($elementOrState);
    $variantChain: properties.create-css-variables-chain($variant);

    --#{$component}#{$elementOrStateChain}--#{$property}--#{$part}: var(
        --#{$component}#{$variantChain}#{$elementOrStateChain}--#{$property}--#{$part}
    );
}

@mixin _color-property($component, $variant, $property, $elementOrState: null) {
    @include _color-property-part($component, $variant, $property, 'h', $elementOrState);
    @include _color-property-part($component, $variant, $property, 's', $elementOrState);
    @include _color-property-part($component, $variant, $property, 'l', $elementOrState);
    @include _color-property-part($component, $variant, $property, 'a', $elementOrState);
}

@mixin _spacing-property-side($component, $variant, $property, $side, $elementOrState: null) {
    $elementOrStateChain: properties.create-css-variables-chain($elementOrState);
    $variantChain: properties.create-css-variables-chain($variant);

    --#{$component}#{$elementOrStateChain}--#{$property}-#{$side}: var(
        --#{$component}#{$variantChain}#{$elementOrStateChain}--#{$property}-#{$side}
    );
}

@mixin _spacing-property($component, $variant, $property, $elementOrState) {
    @include _spacing-property-side($component, $variant, $property, 'top', $elementOrState);
    @include _spacing-property-side($component, $variant, $property, 'right', $elementOrState);
    @include _spacing-property-side($component, $variant, $property, 'bottom', $elementOrState);
    @include _spacing-property-side($component, $variant, $property, 'left', $elementOrState);
}

@mixin selector($variant) {
    &.-#{$variant} {
        @content;
    }
}

@mixin color($component, $variant, $elementOrState: null) {
    @include _color-property($component, $variant, 'color', $elementOrState);
}

@mixin background($component, $variant, $elementOrState: null) {
    @include _color-property($component, $variant, 'background', $elementOrState);
}

@mixin border-color($component, $variant, $elementOrState: null) {
    @include _border-property($component, $variant, 'color', $elementOrState);
}

@mixin _border-radius-corner($component, $variant, $corner, $elementOrState: null) {
    $elementOrStateChain: properties.create-css-variables-chain($elementOrState);
    $variantChain: properties.create-css-variables-chain($variant);

    --#{$component}#{$elementOrStateChain}--border-#{$corner}-radius: var(
        --#{$component}#{$variantChain}#{$elementOrStateChain}--border-#{$corner}-radius
    );
}

@mixin border-radius($component, $variant, $elementOrState: null) {
    @include _border-radius-corner($component, $variant, 'top-left', $elementOrState);
    @include _border-radius-corner($component, $variant, 'top-right', $elementOrState);
    @include _border-radius-corner($component, $variant, 'bottom-right', $elementOrState);
    @include _border-radius-corner($component, $variant, 'bottom-left', $elementOrState);
}

@mixin _box-shadow-part($component, $variant, $property, $elementOrState: null) {
    $elementOrStateChain: properties.create-css-variables-chain($elementOrState);
    $variantChain: properties.create-css-variables-chain($variant);

    --#{$component}#{$elementOrStateChain}--box-shadow-#{$property}: var(
        --#{$component}#{$variantChain}#{$elementOrStateChain}--box-shadow-#{$property}
    );
}

@mixin box-shadow($component, $variant, $elementOrState: null) {
    @include _box-shadow-part($component, $variant, 'offset-x', $elementOrState);
    @include _box-shadow-part($component, $variant, 'offset-y', $elementOrState);
    @include _box-shadow-part($component, $variant, 'blur-radius', $elementOrState);
    @include _box-shadow-part($component, $variant, 'spread-radius', $elementOrState);
    @include _box-shadow-part($component, $variant, 'color', $elementOrState);
}

@mixin font-size($component, $variant, $elementOrState: null) {
    @include _generic-property($component, $variant, 'font-size', $elementOrState);
}

@mixin margin($component, $variant, $elementOrState: null) {
    @include _spacing-property($component, $variant, 'margin', $elementOrState);
}

@mixin padding($component, $variant, $elementOrState: null) {
    @include _spacing-property($component, $variant, 'padding', $elementOrState);
}

@mixin size($component, $variant, $elementOrState: null) {
    @include _generic-property($component, $variant, 'width', $elementOrState);
    @include _generic-property($component, $variant, 'height', $elementOrState);
}
